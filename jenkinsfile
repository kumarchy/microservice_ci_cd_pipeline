pipeline {
    agent any

    environment {
        MONGO_URI = credentials('MONGO_URI')
        DATABASE_URL_1 = credentials('DATABASE_URL_1')
        DATABASE_URL_3 = credentials('DATABASE_URL_3')
        JWT_SECRET = credentials('JWT_SECRET')   
        PORT_1 = credentials('PORT_1')
        PORT_2 = credentials('PORT_2')
        PORT_3 = credentials('PORT_3')
        GATEWAY_PORT = credentials('GATEWAY_PORT')
        AUTH_SERVICE_URL = credentials('AUTH_SERVICE_URL')
        PRODUCT_SERVICE_URL = credentials('PRODUCT_SERVICE_URL')
        ORDER_SERVICE_URL = credentials('ORDER_SERVICE_URL')
    }

    stages {
        stage('Clone Code'){
            steps {
                git branch:'main', url:'https://github.com/kumarchy/microservice_ci_cd_pipeline'
            }
        }
        
        stage('Client Tests'){
            steps {
                dir('client'){
                    sh 'npm install'
                   // sh 'npm test'
                }
            }
        }
        
        stage('Server Tests'){
            steps {
                dir('auth-service'){
                    sh 'npm install'
                }
                
                dir('product-service'){
                    sh 'npm install'
                }

                dir('order-service'){
                    sh 'npm install'
                }

                dir('gateway'){
                    sh 'npm install'
                }
            }
        }

        stage('Create Environment Files'){
            steps {
                // Create .env files for services
                sh """
                # Auth Service .env
                echo "PORT=${PORT_1}" > auth-service/.env
                echo "JWT_SECRET=${JWT_SECRET}" >> auth-service/.env
                echo "DATABASE_URL=${DATABASE_URL_1}" >> auth-service/.env
                
                # Product Service .env
                echo "PORT=${PORT_2}" > product-service/.env
                echo "MONGO_URI=${MONGO_URI}" >> product-service/.env
                
                # Order Service .env
                echo "PORT=${PORT_3}" > order-service/.env
                echo "DATABASE_URL=${DATABASE_URL_3}" >> order-service/.env
                
                # Gateway .env
                echo "PORT=${GATEWAY_PORT}" > gateway/.env
                echo "AUTH_SERVICE_URL=${AUTH_SERVICE_URL}" >> gateway/.env
                echo "PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}" >> gateway/.env
                echo "ORDER_SERVICE_URL=${ORDER_SERVICE_URL}" >> gateway/.env
                """
                
                // Debug to verify env files were created
                sh 'ls -la */.'
                sh 'cat auth-service/.env'
            }
        }

        stage('Build & Run Containers'){
            steps {
                // Use environment variables while running docker-compose
                withEnv([
                    "MONGO_URI=${MONGO_URI}",
                    "DATABASE_URL_1=${DATABASE_URL_1}",
                    "DATABASE_URL_3=${DATABASE_URL_3}",
                    "JWT_SECRET=${JWT_SECRET}",
                    "PORT_1=${PORT_1}",
                    "PORT_2=${PORT_2}",
                    "PORT_3=${PORT_3}",
                    "GATEWAY_PORT=${GATEWAY_PORT}",
                    "AUTH_SERVICE_URL=${AUTH_SERVICE_URL}",
                    "PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}",
                    "ORDER_SERVICE_URL=${ORDER_SERVICE_URL}"
                ]) {
                    sh 'docker-compose up -d --build'
                }
            }
        }
    }
}